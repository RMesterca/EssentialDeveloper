Rules/Restrictions


1. The DB layer should never be exposed to the view layer (view controllers).

2. Only the service should be able to call the DB layer to do create, read, update, and delete (CRUD) operations.

3. The internal working of the DB layer should never be exposed to the outer layers.

4. The DB layer must be written in such a way that the DB client can be changed later, if required, without making too many changes, for example, if you use Core Data initially and then want to use Realm instead.

5. DB entities shouldnâ€™t be exposed to outer layers. View controllers or services should not know about entities/model classes, such as NSManagedObject subclasses. This will reduce the coupling of layers, and DB implementation can be switched easily later.


Naming convention:

1. DBEntity: The entity that implements the Storable interface. This entity can be persisted to the database. For CoreData, NSManagedObject subclasses are DBEntities. For example, StoryEntity is a DBEntity.

2. DomainEntity: The entity that implements the Mappable interface. This entity can be used on the view and business layers. This cannot be saved to the database.
